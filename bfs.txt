#include <bits/stdc++.h>
using namespace std;
vector<string> colour;
vector<int> d,p;
vector<int> graph[100];
int n,e;
void BFS(int s)
{
    queue<int> q;
    q.push(s);
    d[s] = 0;
    colour[s] = "green";
    while (!q.empty())
    {
        int u = q.front();
        q.pop();
        cout << u << " ";
        for (int i=0; i<graph[u].size(); i++)
        {
            int r=graph[u][i];
            if (colour[r] == "white")
            {
                colour[r] = "green";
                d[r] = d[u] + 1;
                p[r] = u;
                q.push(r);
            }
        }
        colour[u] = "dark";
    }
}
int main()
{
    cin>>n>>e;
    for(int i=0; i<e; i++)
    {
        int x,y;
        cin>>x>>y;
        graph[x].push_back(y);
        graph[y].push_back(x);
    }
    colour.assign(n, "white");
    d.assign(n, 0);
    p.assign(n, -1);
    for (int i = 0; i < n; i++)
        if (colour[i] == "white")
            BFS(i);
    cout<<endl;
    for(int i=0; i<d.size(); i++)
    {
        cout<<d[i]<<" ";
    }
    return 0;
}
/*
8 7
0 1
0 2
1 3
2 4
2 5
3 7
3 6
*/
